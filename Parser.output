Terminals unused in grammar

   PERIOD
   FOR
   LOOP
   OBJ


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | block

    3 block: statement
    4      | block statement

    5 instructions: declaration
    6             | RETURN expression
    7             | BREAK

    8 declaration: declarationList COLON TYPE
    9            | declarationList COLON ID
   10            | declarationList COLON TYPE ASSIGN expression
   11            | declarationList COLON ID ASSIGN expression
   12            | declarationList COLON TYPE ARRLEFT ARRRIGHT
   13            | declarationList COLON ID ARRLEFT ARRRIGHT
   14            | declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT
   15            | declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

   16 arrayValues: expression
   17            | expression COMMA arrayValues

   18 declarationList: ID
   19                | ID COMMA declarationList

   20 expression: ID
   21           | NR
   22           | ID ARRLEFT NR ARRRIGHT
   23           | expression MINUS expression
   24           | expression PLUS expression
   25           | expression MUL expression
   26           | expression DIV expression
   27           | LEFT expression RIGHT
   28           | expression GREATER expression
   29           | expression LESS expression
   30           | expression EQL expression
   31           | expression LEQ expression
   32           | expression GREQ expression
   33           | expression NEQ expression
   34           | expression OR expression
   35           | expression AND expression
   36           | NOT expression

   37 statement: instructions SEMICOLON
   38          | functionBlock
   39          | functionCall
   40          | interfaceBlock
   41          | IF LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET
   42          | WHILE LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   45              | FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   46              | FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

   47 functionType: ID
   48             | TYPE
   49             | VOID

   50 functionDeclarationList: functionDeclaration
   51                        | functionDeclaration COMMA functionDeclarationList

   52 functionCall: ID LEFT RIGHT SEMICOLON
   53             | ID LEFT functionCallParamList RIGHT SEMICOLON

   54 functionCallParamList: expression
   55                      | expression COMMA functionCallParamList

   56 functionDeclaration: ID COLON TYPE
   57                    | ID COLON ID
   58                    | ID COLON TYPE ARRLEFT ARRRIGHT
   59                    | ID COLON ID ARRLEFT ARRRIGHT

   60 interfaceBlock: INTERFACE ID LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET

   61 interfaceDeclarationList: interfaceDeclaration
   62                         | interfaceDeclaration interfaceDeclarationList

   63 interfaceDeclaration: ID COLON TYPE SEMICOLON
   64                     | ID COLON ID SEMICOLON
   65                     | ID COLON TYPE ARRLEFT ARRRIGHT SEMICOLON
   66                     | ID COLON ID ARRLEFT ARRRIGHT SEMICOLON
   67                     | ID LEFT functionDeclarationList RIGHT COLON functionType SEMICOLON
   68                     | ID LEFT RIGHT COLON functionType SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 9 11 13 15 18 19 20 22 43 44 45 46 47 52 53 56 57 58 59 60
    63 64 65 66 67 68
NR (259) 21 22
TYPE (260) 8 10 12 14 48 56 58 63 65
VOID (261) 49
PERIOD (262)
COMMA (263) 17 19 51 55
LEFT_BRACKET (264) 41 42 43 44 45 46 60
RIGHT_BRACKET (265) 41 42 43 44 45 46 60
FUNCTION (266) 43 44 45 46
RETURN (267) 6
BREAK (268) 7
INTERFACE (269) 60
ASSIGN (270) 10 11 14 15
IF (271) 41
WHILE (272) 42
FOR (273)
LOOP (274)
OBJ (275)
PLUS (276) 24
MINUS (277) 23
MUL (278) 25
DIV (279) 26
LEFT (280) 27 41 42 43 44 45 46 52 53 67 68
RIGHT (281) 27 41 42 43 44 45 46 52 53 67 68
ARRLEFT (282) 12 13 14 15 22 58 59 65 66
ARRRIGHT (283) 12 13 14 15 22 58 59 65 66
AND (284) 35
LESS (285) 29
LEQ (286) 31
EQL (287) 30
GREATER (288) 28
GREQ (289) 32
OR (290) 34
NOT (291) 36
NEQ (292) 33
SEMICOLON (293) 37 52 53 63 64 65 66 67 68
COLON (294) 8 9 10 11 12 13 14 15 43 44 45 46 56 57 58 59 63 64 65
    66 67 68


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2, on right: 0
block (42)
    on left: 3 4, on right: 2 4 41 42 43 45
instructions (43)
    on left: 5 6 7, on right: 37
declaration (44)
    on left: 8 9 10 11 12 13 14 15, on right: 5
arrayValues (45)
    on left: 16 17, on right: 14 15 17
declarationList (46)
    on left: 18 19, on right: 8 9 10 11 12 13 14 15 19
expression (47)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36, on right:
    6 10 11 16 17 23 24 25 26 27 28 29 30 31 32 33 34 35 36 41 42 54
    55
statement (48)
    on left: 37 38 39 40 41 42, on right: 3 4
functionBlock (49)
    on left: 43 44 45 46, on right: 38
functionType (50)
    on left: 47 48 49, on right: 43 44 45 46 67 68
functionDeclarationList (51)
    on left: 50 51, on right: 43 44 51 67
functionCall (52)
    on left: 52 53, on right: 39
functionCallParamList (53)
    on left: 54 55, on right: 53 55
functionDeclaration (54)
    on left: 56 57 58 59, on right: 50 51
interfaceBlock (55)
    on left: 60, on right: 40
interfaceDeclarationList (56)
    on left: 61 62, on right: 60 62
interfaceDeclaration (57)
    on left: 63 64 65 66 67 68, on right: 61 62


State 0

    0 $accept: . program $end

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    $default  reduce using rule 1 (program)

    program          go to state 8
    block            go to state 9
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 1

   18 declarationList: ID .
   19                | ID . COMMA declarationList
   52 functionCall: ID . LEFT RIGHT SEMICOLON
   53             | ID . LEFT functionCallParamList RIGHT SEMICOLON

    COMMA  shift, and go to state 17
    LEFT   shift, and go to state 18

    $default  reduce using rule 18 (declarationList)


State 2

   43 functionBlock: FUNCTION . ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION . ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   45              | FUNCTION . ID LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   46              | FUNCTION . ID LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    ID  shift, and go to state 19


State 3

    6 instructions: RETURN . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 24


State 4

    7 instructions: BREAK .

    $default  reduce using rule 7 (instructions)


State 5

   60 interfaceBlock: INTERFACE . ID LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET

    ID  shift, and go to state 25


State 6

   41 statement: IF . LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    LEFT  shift, and go to state 26


State 7

   42 statement: WHILE . LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    LEFT  shift, and go to state 27


State 8

    0 $accept: program . $end

    $end  shift, and go to state 28


State 9

    2 program: block .
    4 block: block . statement

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    $default  reduce using rule 2 (program)

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 29
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 10

   37 statement: instructions . SEMICOLON

    SEMICOLON  shift, and go to state 30


State 11

    5 instructions: declaration .

    $default  reduce using rule 5 (instructions)


State 12

    8 declaration: declarationList . COLON TYPE
    9            | declarationList . COLON ID
   10            | declarationList . COLON TYPE ASSIGN expression
   11            | declarationList . COLON ID ASSIGN expression
   12            | declarationList . COLON TYPE ARRLEFT ARRRIGHT
   13            | declarationList . COLON ID ARRLEFT ARRRIGHT
   14            | declarationList . COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT
   15            | declarationList . COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    COLON  shift, and go to state 31


State 13

    3 block: statement .

    $default  reduce using rule 3 (block)


State 14

   38 statement: functionBlock .

    $default  reduce using rule 38 (statement)


State 15

   39 statement: functionCall .

    $default  reduce using rule 39 (statement)


State 16

   40 statement: interfaceBlock .

    $default  reduce using rule 40 (statement)


State 17

   19 declarationList: ID COMMA . declarationList

    ID  shift, and go to state 32

    declarationList  go to state 33


State 18

   52 functionCall: ID LEFT . RIGHT SEMICOLON
   53             | ID LEFT . functionCallParamList RIGHT SEMICOLON

    ID     shift, and go to state 20
    NR     shift, and go to state 21
    LEFT   shift, and go to state 22
    RIGHT  shift, and go to state 34
    NOT    shift, and go to state 23

    expression             go to state 35
    functionCallParamList  go to state 36


State 19

   43 functionBlock: FUNCTION ID . LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION ID . LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   45              | FUNCTION ID . LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   46              | FUNCTION ID . LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    LEFT  shift, and go to state 37


State 20

   20 expression: ID .
   22           | ID . ARRLEFT NR ARRRIGHT

    ARRLEFT  shift, and go to state 38

    $default  reduce using rule 20 (expression)


State 21

   21 expression: NR .

    $default  reduce using rule 21 (expression)


State 22

   27 expression: LEFT . expression RIGHT

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 39


State 23

   36 expression: NOT . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 40


State 24

    6 instructions: RETURN expression .
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52

    $default  reduce using rule 6 (instructions)


State 25

   60 interfaceBlock: INTERFACE ID . LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 53


State 26

   41 statement: IF LEFT . expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 54


State 27

   42 statement: WHILE LEFT . expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 55


State 28

    0 $accept: program $end .

    $default  accept


State 29

    4 block: block statement .

    $default  reduce using rule 4 (block)


State 30

   37 statement: instructions SEMICOLON .

    $default  reduce using rule 37 (statement)


State 31

    8 declaration: declarationList COLON . TYPE
    9            | declarationList COLON . ID
   10            | declarationList COLON . TYPE ASSIGN expression
   11            | declarationList COLON . ID ASSIGN expression
   12            | declarationList COLON . TYPE ARRLEFT ARRRIGHT
   13            | declarationList COLON . ID ARRLEFT ARRRIGHT
   14            | declarationList COLON . TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT
   15            | declarationList COLON . ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ID    shift, and go to state 56
    TYPE  shift, and go to state 57


State 32

   18 declarationList: ID .
   19                | ID . COMMA declarationList

    COMMA  shift, and go to state 17

    $default  reduce using rule 18 (declarationList)


State 33

   19 declarationList: ID COMMA declarationList .

    $default  reduce using rule 19 (declarationList)


State 34

   52 functionCall: ID LEFT RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 35

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   54 functionCallParamList: expression .
   55                      | expression . COMMA functionCallParamList

    COMMA    shift, and go to state 59
    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52

    $default  reduce using rule 54 (functionCallParamList)


State 36

   53 functionCall: ID LEFT functionCallParamList . RIGHT SEMICOLON

    RIGHT  shift, and go to state 60


State 37

   43 functionBlock: FUNCTION ID LEFT . functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION ID LEFT . functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   45              | FUNCTION ID LEFT . RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   46              | FUNCTION ID LEFT . RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    ID     shift, and go to state 61
    RIGHT  shift, and go to state 62

    functionDeclarationList  go to state 63
    functionDeclaration      go to state 64


State 38

   22 expression: ID ARRLEFT . NR ARRRIGHT

    NR  shift, and go to state 65


State 39

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   27           | LEFT expression . RIGHT
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    RIGHT    shift, and go to state 66
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52


State 40

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   36           | NOT expression .

    $default  reduce using rule 36 (expression)


State 41

   24 expression: expression PLUS . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 67


State 42

   23 expression: expression MINUS . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 68


State 43

   25 expression: expression MUL . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 69


State 44

   26 expression: expression DIV . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 70


State 45

   35 expression: expression AND . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 71


State 46

   29 expression: expression LESS . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 72


State 47

   31 expression: expression LEQ . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 73


State 48

   30 expression: expression EQL . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 74


State 49

   28 expression: expression GREATER . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 75


State 50

   32 expression: expression GREQ . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 76


State 51

   34 expression: expression OR . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 77


State 52

   33 expression: expression NEQ . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 78


State 53

   60 interfaceBlock: INTERFACE ID LEFT_BRACKET . interfaceDeclarationList RIGHT_BRACKET

    ID  shift, and go to state 79

    interfaceDeclarationList  go to state 80
    interfaceDeclaration      go to state 81


State 54

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   41 statement: IF LEFT expression . RIGHT LEFT_BRACKET block RIGHT_BRACKET

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    RIGHT    shift, and go to state 82
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52


State 55

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   42 statement: WHILE LEFT expression . RIGHT LEFT_BRACKET block RIGHT_BRACKET

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    RIGHT    shift, and go to state 83
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52


State 56

    9 declaration: declarationList COLON ID .
   11            | declarationList COLON ID . ASSIGN expression
   13            | declarationList COLON ID . ARRLEFT ARRRIGHT
   15            | declarationList COLON ID . ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN   shift, and go to state 84
    ARRLEFT  shift, and go to state 85

    $default  reduce using rule 9 (declaration)


State 57

    8 declaration: declarationList COLON TYPE .
   10            | declarationList COLON TYPE . ASSIGN expression
   12            | declarationList COLON TYPE . ARRLEFT ARRRIGHT
   14            | declarationList COLON TYPE . ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN   shift, and go to state 86
    ARRLEFT  shift, and go to state 87

    $default  reduce using rule 8 (declaration)


State 58

   52 functionCall: ID LEFT RIGHT SEMICOLON .

    $default  reduce using rule 52 (functionCall)


State 59

   55 functionCallParamList: expression COMMA . functionCallParamList

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression             go to state 35
    functionCallParamList  go to state 88


State 60

   53 functionCall: ID LEFT functionCallParamList RIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 61

   56 functionDeclaration: ID . COLON TYPE
   57                    | ID . COLON ID
   58                    | ID . COLON TYPE ARRLEFT ARRRIGHT
   59                    | ID . COLON ID ARRLEFT ARRRIGHT

    COLON  shift, and go to state 90


State 62

   45 functionBlock: FUNCTION ID LEFT RIGHT . COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   46              | FUNCTION ID LEFT RIGHT . COLON functionType LEFT_BRACKET RIGHT_BRACKET

    COLON  shift, and go to state 91


State 63

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList . RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION ID LEFT functionDeclarationList . RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    RIGHT  shift, and go to state 92


State 64

   50 functionDeclarationList: functionDeclaration .
   51                        | functionDeclaration . COMMA functionDeclarationList

    COMMA  shift, and go to state 93

    $default  reduce using rule 50 (functionDeclarationList)


State 65

   22 expression: ID ARRLEFT NR . ARRRIGHT

    ARRRIGHT  shift, and go to state 94


State 66

   27 expression: LEFT expression RIGHT .

    $default  reduce using rule 27 (expression)


State 67

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   24           | expression PLUS expression .
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44

    $default  reduce using rule 24 (expression)


State 68

   23 expression: expression . MINUS expression
   23           | expression MINUS expression .
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44

    $default  reduce using rule 23 (expression)


State 69

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   25           | expression MUL expression .
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    $default  reduce using rule 25 (expression)


State 70

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   26           | expression DIV expression .
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    $default  reduce using rule 26 (expression)


State 71

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   35           | expression AND expression .

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    NEQ      shift, and go to state 52

    $default  reduce using rule 35 (expression)


State 72

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   29           | expression LESS expression .
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 29 (expression)


State 73

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   31           | expression LEQ expression .
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 31 (expression)


State 74

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   30           | expression EQL expression .
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 30 (expression)


State 75

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   28           | expression GREATER expression .
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 28 (expression)


State 76

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   32           | expression GREQ expression .
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 32 (expression)


State 77

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   34           | expression OR expression .
   35           | expression . AND expression

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    NEQ      shift, and go to state 52

    $default  reduce using rule 34 (expression)


State 78

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   33           | expression NEQ expression .
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44

    $default  reduce using rule 33 (expression)


State 79

   63 interfaceDeclaration: ID . COLON TYPE SEMICOLON
   64                     | ID . COLON ID SEMICOLON
   65                     | ID . COLON TYPE ARRLEFT ARRRIGHT SEMICOLON
   66                     | ID . COLON ID ARRLEFT ARRRIGHT SEMICOLON
   67                     | ID . LEFT functionDeclarationList RIGHT COLON functionType SEMICOLON
   68                     | ID . LEFT RIGHT COLON functionType SEMICOLON

    LEFT   shift, and go to state 95
    COLON  shift, and go to state 96


State 80

   60 interfaceBlock: INTERFACE ID LEFT_BRACKET interfaceDeclarationList . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 97


State 81

   61 interfaceDeclarationList: interfaceDeclaration .
   62                         | interfaceDeclaration . interfaceDeclarationList

    ID  shift, and go to state 79

    $default  reduce using rule 61 (interfaceDeclarationList)

    interfaceDeclarationList  go to state 98
    interfaceDeclaration      go to state 81


State 82

   41 statement: IF LEFT expression RIGHT . LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 99


State 83

   42 statement: WHILE LEFT expression RIGHT . LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 100


State 84

   11 declaration: declarationList COLON ID ASSIGN . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 101


State 85

   13 declaration: declarationList COLON ID ARRLEFT . ARRRIGHT
   15            | declarationList COLON ID ARRLEFT . ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ARRRIGHT  shift, and go to state 102


State 86

   10 declaration: declarationList COLON TYPE ASSIGN . expression

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    expression  go to state 103


State 87

   12 declaration: declarationList COLON TYPE ARRLEFT . ARRRIGHT
   14            | declarationList COLON TYPE ARRLEFT . ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ARRRIGHT  shift, and go to state 104


State 88

   55 functionCallParamList: expression COMMA functionCallParamList .

    $default  reduce using rule 55 (functionCallParamList)


State 89

   53 functionCall: ID LEFT functionCallParamList RIGHT SEMICOLON .

    $default  reduce using rule 53 (functionCall)


State 90

   56 functionDeclaration: ID COLON . TYPE
   57                    | ID COLON . ID
   58                    | ID COLON . TYPE ARRLEFT ARRRIGHT
   59                    | ID COLON . ID ARRLEFT ARRRIGHT

    ID    shift, and go to state 105
    TYPE  shift, and go to state 106


State 91

   45 functionBlock: FUNCTION ID LEFT RIGHT COLON . functionType LEFT_BRACKET block RIGHT_BRACKET
   46              | FUNCTION ID LEFT RIGHT COLON . functionType LEFT_BRACKET RIGHT_BRACKET

    ID    shift, and go to state 107
    TYPE  shift, and go to state 108
    VOID  shift, and go to state 109

    functionType  go to state 110


State 92

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT . COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION ID LEFT functionDeclarationList RIGHT . COLON functionType LEFT_BRACKET RIGHT_BRACKET

    COLON  shift, and go to state 111


State 93

   51 functionDeclarationList: functionDeclaration COMMA . functionDeclarationList

    ID  shift, and go to state 61

    functionDeclarationList  go to state 112
    functionDeclaration      go to state 64


State 94

   22 expression: ID ARRLEFT NR ARRRIGHT .

    $default  reduce using rule 22 (expression)


State 95

   67 interfaceDeclaration: ID LEFT . functionDeclarationList RIGHT COLON functionType SEMICOLON
   68                     | ID LEFT . RIGHT COLON functionType SEMICOLON

    ID     shift, and go to state 61
    RIGHT  shift, and go to state 113

    functionDeclarationList  go to state 114
    functionDeclaration      go to state 64


State 96

   63 interfaceDeclaration: ID COLON . TYPE SEMICOLON
   64                     | ID COLON . ID SEMICOLON
   65                     | ID COLON . TYPE ARRLEFT ARRRIGHT SEMICOLON
   66                     | ID COLON . ID ARRLEFT ARRRIGHT SEMICOLON

    ID    shift, and go to state 115
    TYPE  shift, and go to state 116


State 97

   60 interfaceBlock: INTERFACE ID LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET .

    $default  reduce using rule 60 (interfaceBlock)


State 98

   62 interfaceDeclarationList: interfaceDeclaration interfaceDeclarationList .

    $default  reduce using rule 62 (interfaceDeclarationList)


State 99

   41 statement: IF LEFT expression RIGHT LEFT_BRACKET . block RIGHT_BRACKET

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    block            go to state 117
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 100

   42 statement: WHILE LEFT expression RIGHT LEFT_BRACKET . block RIGHT_BRACKET

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    block            go to state 118
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 101

   11 declaration: declarationList COLON ID ASSIGN expression .
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52

    $default  reduce using rule 11 (declaration)


State 102

   13 declaration: declarationList COLON ID ARRLEFT ARRRIGHT .
   15            | declarationList COLON ID ARRLEFT ARRRIGHT . ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN  shift, and go to state 119

    $default  reduce using rule 13 (declaration)


State 103

   10 declaration: declarationList COLON TYPE ASSIGN expression .
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52

    $default  reduce using rule 10 (declaration)


State 104

   12 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT .
   14            | declarationList COLON TYPE ARRLEFT ARRRIGHT . ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN  shift, and go to state 120

    $default  reduce using rule 12 (declaration)


State 105

   57 functionDeclaration: ID COLON ID .
   59                    | ID COLON ID . ARRLEFT ARRRIGHT

    ARRLEFT  shift, and go to state 121

    $default  reduce using rule 57 (functionDeclaration)


State 106

   56 functionDeclaration: ID COLON TYPE .
   58                    | ID COLON TYPE . ARRLEFT ARRRIGHT

    ARRLEFT  shift, and go to state 122

    $default  reduce using rule 56 (functionDeclaration)


State 107

   47 functionType: ID .

    $default  reduce using rule 47 (functionType)


State 108

   48 functionType: TYPE .

    $default  reduce using rule 48 (functionType)


State 109

   49 functionType: VOID .

    $default  reduce using rule 49 (functionType)


State 110

   45 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType . LEFT_BRACKET block RIGHT_BRACKET
   46              | FUNCTION ID LEFT RIGHT COLON functionType . LEFT_BRACKET RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 123


State 111

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON . functionType LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON . functionType LEFT_BRACKET RIGHT_BRACKET

    ID    shift, and go to state 107
    TYPE  shift, and go to state 108
    VOID  shift, and go to state 109

    functionType  go to state 124


State 112

   51 functionDeclarationList: functionDeclaration COMMA functionDeclarationList .

    $default  reduce using rule 51 (functionDeclarationList)


State 113

   68 interfaceDeclaration: ID LEFT RIGHT . COLON functionType SEMICOLON

    COLON  shift, and go to state 125


State 114

   67 interfaceDeclaration: ID LEFT functionDeclarationList . RIGHT COLON functionType SEMICOLON

    RIGHT  shift, and go to state 126


State 115

   64 interfaceDeclaration: ID COLON ID . SEMICOLON
   66                     | ID COLON ID . ARRLEFT ARRRIGHT SEMICOLON

    ARRLEFT    shift, and go to state 127
    SEMICOLON  shift, and go to state 128


State 116

   63 interfaceDeclaration: ID COLON TYPE . SEMICOLON
   65                     | ID COLON TYPE . ARRLEFT ARRRIGHT SEMICOLON

    ARRLEFT    shift, and go to state 129
    SEMICOLON  shift, and go to state 130


State 117

    4 block: block . statement
   41 statement: IF LEFT expression RIGHT LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 131
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 29
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 118

    4 block: block . statement
   42 statement: WHILE LEFT expression RIGHT LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 132
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 29
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 119

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN . ARRLEFT arrayValues ARRRIGHT

    ARRLEFT  shift, and go to state 133


State 120

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN . ARRLEFT arrayValues ARRRIGHT

    ARRLEFT  shift, and go to state 134


State 121

   59 functionDeclaration: ID COLON ID ARRLEFT . ARRRIGHT

    ARRRIGHT  shift, and go to state 135


State 122

   58 functionDeclaration: ID COLON TYPE ARRLEFT . ARRRIGHT

    ARRRIGHT  shift, and go to state 136


State 123

   45 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET . block RIGHT_BRACKET
   46              | FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 137
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    block            go to state 138
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 124

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType . LEFT_BRACKET block RIGHT_BRACKET
   44              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType . LEFT_BRACKET RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 139


State 125

   68 interfaceDeclaration: ID LEFT RIGHT COLON . functionType SEMICOLON

    ID    shift, and go to state 107
    TYPE  shift, and go to state 108
    VOID  shift, and go to state 109

    functionType  go to state 140


State 126

   67 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT . COLON functionType SEMICOLON

    COLON  shift, and go to state 141


State 127

   66 interfaceDeclaration: ID COLON ID ARRLEFT . ARRRIGHT SEMICOLON

    ARRRIGHT  shift, and go to state 142


State 128

   64 interfaceDeclaration: ID COLON ID SEMICOLON .

    $default  reduce using rule 64 (interfaceDeclaration)


State 129

   65 interfaceDeclaration: ID COLON TYPE ARRLEFT . ARRRIGHT SEMICOLON

    ARRRIGHT  shift, and go to state 143


State 130

   63 interfaceDeclaration: ID COLON TYPE SEMICOLON .

    $default  reduce using rule 63 (interfaceDeclaration)


State 131

   41 statement: IF LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 41 (statement)


State 132

   42 statement: WHILE LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 42 (statement)


State 133

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT . arrayValues ARRRIGHT

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    arrayValues  go to state 144
    expression   go to state 145


State 134

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT . arrayValues ARRRIGHT

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    arrayValues  go to state 146
    expression   go to state 145


State 135

   59 functionDeclaration: ID COLON ID ARRLEFT ARRRIGHT .

    $default  reduce using rule 59 (functionDeclaration)


State 136

   58 functionDeclaration: ID COLON TYPE ARRLEFT ARRRIGHT .

    $default  reduce using rule 58 (functionDeclaration)


State 137

   46 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 46 (functionBlock)


State 138

    4 block: block . statement
   45 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 147
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 29
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 139

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET . block RIGHT_BRACKET
   44              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 148
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    block            go to state 149
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 140

   68 interfaceDeclaration: ID LEFT RIGHT COLON functionType . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 141

   67 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT COLON . functionType SEMICOLON

    ID    shift, and go to state 107
    TYPE  shift, and go to state 108
    VOID  shift, and go to state 109

    functionType  go to state 151


State 142

   66 interfaceDeclaration: ID COLON ID ARRLEFT ARRRIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 152


State 143

   65 interfaceDeclaration: ID COLON TYPE ARRLEFT ARRRIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 153


State 144

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues . ARRRIGHT

    ARRRIGHT  shift, and go to state 154


State 145

   16 arrayValues: expression .
   17            | expression . COMMA arrayValues
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    COMMA    shift, and go to state 155
    PLUS     shift, and go to state 41
    MINUS    shift, and go to state 42
    MUL      shift, and go to state 43
    DIV      shift, and go to state 44
    AND      shift, and go to state 45
    LESS     shift, and go to state 46
    LEQ      shift, and go to state 47
    EQL      shift, and go to state 48
    GREATER  shift, and go to state 49
    GREQ     shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52

    $default  reduce using rule 16 (arrayValues)


State 146

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues . ARRRIGHT

    ARRRIGHT  shift, and go to state 156


State 147

   45 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 45 (functionBlock)


State 148

   44 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 44 (functionBlock)


State 149

    4 block: block . statement
   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 157
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 29
    functionBlock    go to state 14
    functionCall     go to state 15
    interfaceBlock   go to state 16


State 150

   68 interfaceDeclaration: ID LEFT RIGHT COLON functionType SEMICOLON .

    $default  reduce using rule 68 (interfaceDeclaration)


State 151

   67 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT COLON functionType . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 152

   66 interfaceDeclaration: ID COLON ID ARRLEFT ARRRIGHT SEMICOLON .

    $default  reduce using rule 66 (interfaceDeclaration)


State 153

   65 interfaceDeclaration: ID COLON TYPE ARRLEFT ARRRIGHT SEMICOLON .

    $default  reduce using rule 65 (interfaceDeclaration)


State 154

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT .

    $default  reduce using rule 15 (declaration)


State 155

   17 arrayValues: expression COMMA . arrayValues

    ID    shift, and go to state 20
    NR    shift, and go to state 21
    LEFT  shift, and go to state 22
    NOT   shift, and go to state 23

    arrayValues  go to state 159
    expression   go to state 145


State 156

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT .

    $default  reduce using rule 14 (declaration)


State 157

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 43 (functionBlock)


State 158

   67 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT COLON functionType SEMICOLON .

    $default  reduce using rule 67 (interfaceDeclaration)


State 159

   17 arrayValues: expression COMMA arrayValues .

    $default  reduce using rule 17 (arrayValues)
