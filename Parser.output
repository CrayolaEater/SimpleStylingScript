Terminals unused in grammar

   PERIOD
   FOR
   LOOP
   OBJ


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | block

    3 block: statement
    4      | block statement

    5 instructions: declaration
    6             | RETURN expression
    7             | BREAK

    8 declaration: declarationList COLON TYPE
    9            | declarationList COLON ID
   10            | declarationList COLON TYPE ASSIGN expression
   11            | declarationList COLON ID ASSIGN expression
   12            | declarationList COLON TYPE ARRLEFT ARRRIGHT
   13            | declarationList COLON ID ARRLEFT ARRRIGHT
   14            | declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT
   15            | declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

   16 arrayValues: expression
   17            | expression COMMA arrayValues

   18 declarationList: ID
   19                | ID COMMA declarationList

   20 expression: ID
   21           | NR
   22           | ID ARRLEFT NR ARRRIGHT
   23           | expression MINUS expression
   24           | expression PLUS expression
   25           | expression MUL expression
   26           | expression DIV expression
   27           | LEFT expression RIGHT
   28           | expression GREATER expression
   29           | expression LESS expression
   30           | expression EQL expression
   31           | expression LEQ expression
   32           | expression GREQ expression
   33           | expression NEQ expression
   34           | expression OR expression
   35           | expression AND expression
   36           | NOT expression

   37 statement: instructions SEMICOLON
   38          | functionBlock
   39          | interfaceBlock
   40          | IF LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET
   41          | WHILE LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

   42 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   44              | FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   45              | FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

   46 functionType: ID
   47             | TYPE
   48             | VOID

   49 functionDeclarationList: functionDeclaration
   50                        | functionDeclaration COMMA functionDeclarationList

   51 functionDeclaration: ID COLON TYPE
   52                    | ID COLON ID
   53                    | ID COLON TYPE ARRLEFT ARRRIGHT
   54                    | ID COLON ID ARRLEFT ARRRIGHT

   55 interfaceBlock: INTERFACE ID LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET

   56 interfaceDeclarationList: interfaceDeclaration
   57                         | interfaceDeclaration interfaceDeclarationList

   58 interfaceDeclaration: ID COLON TYPE SEMICOLON
   59                     | ID COLON ID SEMICOLON
   60                     | ID COLON TYPE ARRLEFT ARRRIGHT SEMICOLON
   61                     | ID COLON ID ARRLEFT ARRRIGHT SEMICOLON
   62                     | ID LEFT functionDeclarationList RIGHT COLON functionType SEMICOLON
   63                     | ID LEFT RIGHT COLON functionType SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NR (258) 21 22
ID (259) 9 11 13 15 18 19 20 22 42 43 44 45 46 51 52 53 54 55 58 59
    60 61 62 63
PERIOD (260)
COMMA (261) 17 19 50
LEFT_BRACKET (262) 40 41 42 43 44 45 55
RIGHT_BRACKET (263) 40 41 42 43 44 45 55
FUNCTION (264) 42 43 44 45
RETURN (265) 6
BREAK (266) 7
INTERFACE (267) 55
ASSIGN (268) 10 11 14 15
IF (269) 40
WHILE (270) 41
FOR (271)
LOOP (272)
OBJ (273)
PLUS (274) 24
MINUS (275) 23
MUL (276) 25
DIV (277) 26
LEFT (278) 27 40 41 42 43 44 45 62 63
RIGHT (279) 27 40 41 42 43 44 45 62 63
ARRLEFT (280) 12 13 14 15 22 53 54 60 61
ARRRIGHT (281) 12 13 14 15 22 53 54 60 61
AND (282) 35
LESS (283) 29
LEQ (284) 31
EQL (285) 30
GREATER (286) 28
GREQ (287) 32
OR (288) 34
NOT (289) 36
NEQ (290) 33
SEMICOLON (291) 37 58 59 60 61 62 63
COLON (292) 8 9 10 11 12 13 14 15 42 43 44 45 51 52 53 54 58 59 60
    61 62 63
TYPE (293) 8 10 12 14 47 51 53 58 60
VOID (294) 48


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2, on right: 0
block (42)
    on left: 3 4, on right: 2 4 40 41 42 44
instructions (43)
    on left: 5 6 7, on right: 37
declaration (44)
    on left: 8 9 10 11 12 13 14 15, on right: 5
arrayValues (45)
    on left: 16 17, on right: 14 15 17
declarationList (46)
    on left: 18 19, on right: 8 9 10 11 12 13 14 15 19
expression (47)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36, on right:
    6 10 11 16 17 23 24 25 26 27 28 29 30 31 32 33 34 35 36 40 41
statement (48)
    on left: 37 38 39 40 41, on right: 3 4
functionBlock (49)
    on left: 42 43 44 45, on right: 38
functionType (50)
    on left: 46 47 48, on right: 42 43 44 45 62 63
functionDeclarationList (51)
    on left: 49 50, on right: 42 43 50 62
functionDeclaration (52)
    on left: 51 52 53 54, on right: 49 50
interfaceBlock (53)
    on left: 55, on right: 39
interfaceDeclarationList (54)
    on left: 56 57, on right: 55 57
interfaceDeclaration (55)
    on left: 58 59 60 61 62 63, on right: 56 57


State 0

    0 $accept: . program $end

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    $default  reduce using rule 1 (program)

    program          go to state 8
    block            go to state 9
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 1

   18 declarationList: ID .
   19                | ID . COMMA declarationList

    COMMA  shift, and go to state 16

    $default  reduce using rule 18 (declarationList)


State 2

   42 functionBlock: FUNCTION . ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION . ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   44              | FUNCTION . ID LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   45              | FUNCTION . ID LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    ID  shift, and go to state 17


State 3

    6 instructions: RETURN . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 22


State 4

    7 instructions: BREAK .

    $default  reduce using rule 7 (instructions)


State 5

   55 interfaceBlock: INTERFACE . ID LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET

    ID  shift, and go to state 23


State 6

   40 statement: IF . LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    LEFT  shift, and go to state 24


State 7

   41 statement: WHILE . LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    LEFT  shift, and go to state 25


State 8

    0 $accept: program . $end

    $end  shift, and go to state 26


State 9

    2 program: block .
    4 block: block . statement

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    $default  reduce using rule 2 (program)

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 27
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 10

   37 statement: instructions . SEMICOLON

    SEMICOLON  shift, and go to state 28


State 11

    5 instructions: declaration .

    $default  reduce using rule 5 (instructions)


State 12

    8 declaration: declarationList . COLON TYPE
    9            | declarationList . COLON ID
   10            | declarationList . COLON TYPE ASSIGN expression
   11            | declarationList . COLON ID ASSIGN expression
   12            | declarationList . COLON TYPE ARRLEFT ARRRIGHT
   13            | declarationList . COLON ID ARRLEFT ARRRIGHT
   14            | declarationList . COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT
   15            | declarationList . COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    COLON  shift, and go to state 29


State 13

    3 block: statement .

    $default  reduce using rule 3 (block)


State 14

   38 statement: functionBlock .

    $default  reduce using rule 38 (statement)


State 15

   39 statement: interfaceBlock .

    $default  reduce using rule 39 (statement)


State 16

   19 declarationList: ID COMMA . declarationList

    ID  shift, and go to state 1

    declarationList  go to state 30


State 17

   42 functionBlock: FUNCTION ID . LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION ID . LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   44              | FUNCTION ID . LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   45              | FUNCTION ID . LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    LEFT  shift, and go to state 31


State 18

   21 expression: NR .

    $default  reduce using rule 21 (expression)


State 19

   20 expression: ID .
   22           | ID . ARRLEFT NR ARRRIGHT

    ARRLEFT  shift, and go to state 32

    $default  reduce using rule 20 (expression)


State 20

   27 expression: LEFT . expression RIGHT

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 33


State 21

   36 expression: NOT . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 34


State 22

    6 instructions: RETURN expression .
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    AND      shift, and go to state 39
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    OR       shift, and go to state 45
    NEQ      shift, and go to state 46

    $default  reduce using rule 6 (instructions)


State 23

   55 interfaceBlock: INTERFACE ID . LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 47


State 24

   40 statement: IF LEFT . expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 48


State 25

   41 statement: WHILE LEFT . expression RIGHT LEFT_BRACKET block RIGHT_BRACKET

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 49


State 26

    0 $accept: program $end .

    $default  accept


State 27

    4 block: block statement .

    $default  reduce using rule 4 (block)


State 28

   37 statement: instructions SEMICOLON .

    $default  reduce using rule 37 (statement)


State 29

    8 declaration: declarationList COLON . TYPE
    9            | declarationList COLON . ID
   10            | declarationList COLON . TYPE ASSIGN expression
   11            | declarationList COLON . ID ASSIGN expression
   12            | declarationList COLON . TYPE ARRLEFT ARRRIGHT
   13            | declarationList COLON . ID ARRLEFT ARRRIGHT
   14            | declarationList COLON . TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT
   15            | declarationList COLON . ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ID    shift, and go to state 50
    TYPE  shift, and go to state 51


State 30

   19 declarationList: ID COMMA declarationList .

    $default  reduce using rule 19 (declarationList)


State 31

   42 functionBlock: FUNCTION ID LEFT . functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION ID LEFT . functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET
   44              | FUNCTION ID LEFT . RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   45              | FUNCTION ID LEFT . RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    ID     shift, and go to state 52
    RIGHT  shift, and go to state 53

    functionDeclarationList  go to state 54
    functionDeclaration      go to state 55


State 32

   22 expression: ID ARRLEFT . NR ARRRIGHT

    NR  shift, and go to state 56


State 33

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   27           | LEFT expression . RIGHT
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    RIGHT    shift, and go to state 57
    AND      shift, and go to state 39
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    OR       shift, and go to state 45
    NEQ      shift, and go to state 46


State 34

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   36           | NOT expression .

    $default  reduce using rule 36 (expression)


State 35

   24 expression: expression PLUS . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 58


State 36

   23 expression: expression MINUS . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 59


State 37

   25 expression: expression MUL . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 60


State 38

   26 expression: expression DIV . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 61


State 39

   35 expression: expression AND . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 62


State 40

   29 expression: expression LESS . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 63


State 41

   31 expression: expression LEQ . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 64


State 42

   30 expression: expression EQL . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 65


State 43

   28 expression: expression GREATER . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 66


State 44

   32 expression: expression GREQ . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 67


State 45

   34 expression: expression OR . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 68


State 46

   33 expression: expression NEQ . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 69


State 47

   55 interfaceBlock: INTERFACE ID LEFT_BRACKET . interfaceDeclarationList RIGHT_BRACKET

    ID  shift, and go to state 70

    interfaceDeclarationList  go to state 71
    interfaceDeclaration      go to state 72


State 48

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   40 statement: IF LEFT expression . RIGHT LEFT_BRACKET block RIGHT_BRACKET

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    RIGHT    shift, and go to state 73
    AND      shift, and go to state 39
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    OR       shift, and go to state 45
    NEQ      shift, and go to state 46


State 49

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   41 statement: WHILE LEFT expression . RIGHT LEFT_BRACKET block RIGHT_BRACKET

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    RIGHT    shift, and go to state 74
    AND      shift, and go to state 39
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    OR       shift, and go to state 45
    NEQ      shift, and go to state 46


State 50

    9 declaration: declarationList COLON ID .
   11            | declarationList COLON ID . ASSIGN expression
   13            | declarationList COLON ID . ARRLEFT ARRRIGHT
   15            | declarationList COLON ID . ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN   shift, and go to state 75
    ARRLEFT  shift, and go to state 76

    $default  reduce using rule 9 (declaration)


State 51

    8 declaration: declarationList COLON TYPE .
   10            | declarationList COLON TYPE . ASSIGN expression
   12            | declarationList COLON TYPE . ARRLEFT ARRRIGHT
   14            | declarationList COLON TYPE . ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN   shift, and go to state 77
    ARRLEFT  shift, and go to state 78

    $default  reduce using rule 8 (declaration)


State 52

   51 functionDeclaration: ID . COLON TYPE
   52                    | ID . COLON ID
   53                    | ID . COLON TYPE ARRLEFT ARRRIGHT
   54                    | ID . COLON ID ARRLEFT ARRRIGHT

    COLON  shift, and go to state 79


State 53

   44 functionBlock: FUNCTION ID LEFT RIGHT . COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   45              | FUNCTION ID LEFT RIGHT . COLON functionType LEFT_BRACKET RIGHT_BRACKET

    COLON  shift, and go to state 80


State 54

   42 functionBlock: FUNCTION ID LEFT functionDeclarationList . RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION ID LEFT functionDeclarationList . RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET

    RIGHT  shift, and go to state 81


State 55

   49 functionDeclarationList: functionDeclaration .
   50                        | functionDeclaration . COMMA functionDeclarationList

    COMMA  shift, and go to state 82

    $default  reduce using rule 49 (functionDeclarationList)


State 56

   22 expression: ID ARRLEFT NR . ARRRIGHT

    ARRRIGHT  shift, and go to state 83


State 57

   27 expression: LEFT expression RIGHT .

    $default  reduce using rule 27 (expression)


State 58

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   24           | expression PLUS expression .
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 24 (expression)


State 59

   23 expression: expression . MINUS expression
   23           | expression MINUS expression .
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 23 (expression)


State 60

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   25           | expression MUL expression .
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    $default  reduce using rule 25 (expression)


State 61

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   26           | expression DIV expression .
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    $default  reduce using rule 26 (expression)


State 62

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression
   35           | expression AND expression .

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    NEQ      shift, and go to state 46

    $default  reduce using rule 35 (expression)


State 63

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   29           | expression LESS expression .
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 29 (expression)


State 64

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   31           | expression LEQ expression .
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 31 (expression)


State 65

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   30           | expression EQL expression .
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 30 (expression)


State 66

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   28           | expression GREATER expression .
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 28 (expression)


State 67

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   32           | expression GREQ expression .
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 32 (expression)


State 68

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   34           | expression OR expression .
   35           | expression . AND expression

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    NEQ      shift, and go to state 46

    $default  reduce using rule 34 (expression)


State 69

   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   33           | expression NEQ expression .
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 33 (expression)


State 70

   58 interfaceDeclaration: ID . COLON TYPE SEMICOLON
   59                     | ID . COLON ID SEMICOLON
   60                     | ID . COLON TYPE ARRLEFT ARRRIGHT SEMICOLON
   61                     | ID . COLON ID ARRLEFT ARRRIGHT SEMICOLON
   62                     | ID . LEFT functionDeclarationList RIGHT COLON functionType SEMICOLON
   63                     | ID . LEFT RIGHT COLON functionType SEMICOLON

    LEFT   shift, and go to state 84
    COLON  shift, and go to state 85


State 71

   55 interfaceBlock: INTERFACE ID LEFT_BRACKET interfaceDeclarationList . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 86


State 72

   56 interfaceDeclarationList: interfaceDeclaration .
   57                         | interfaceDeclaration . interfaceDeclarationList

    ID  shift, and go to state 70

    $default  reduce using rule 56 (interfaceDeclarationList)

    interfaceDeclarationList  go to state 87
    interfaceDeclaration      go to state 72


State 73

   40 statement: IF LEFT expression RIGHT . LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 88


State 74

   41 statement: WHILE LEFT expression RIGHT . LEFT_BRACKET block RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 89


State 75

   11 declaration: declarationList COLON ID ASSIGN . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 90


State 76

   13 declaration: declarationList COLON ID ARRLEFT . ARRRIGHT
   15            | declarationList COLON ID ARRLEFT . ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ARRRIGHT  shift, and go to state 91


State 77

   10 declaration: declarationList COLON TYPE ASSIGN . expression

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    expression  go to state 92


State 78

   12 declaration: declarationList COLON TYPE ARRLEFT . ARRRIGHT
   14            | declarationList COLON TYPE ARRLEFT . ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT

    ARRRIGHT  shift, and go to state 93


State 79

   51 functionDeclaration: ID COLON . TYPE
   52                    | ID COLON . ID
   53                    | ID COLON . TYPE ARRLEFT ARRRIGHT
   54                    | ID COLON . ID ARRLEFT ARRRIGHT

    ID    shift, and go to state 94
    TYPE  shift, and go to state 95


State 80

   44 functionBlock: FUNCTION ID LEFT RIGHT COLON . functionType LEFT_BRACKET block RIGHT_BRACKET
   45              | FUNCTION ID LEFT RIGHT COLON . functionType LEFT_BRACKET RIGHT_BRACKET

    ID    shift, and go to state 96
    TYPE  shift, and go to state 97
    VOID  shift, and go to state 98

    functionType  go to state 99


State 81

   42 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT . COLON functionType LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION ID LEFT functionDeclarationList RIGHT . COLON functionType LEFT_BRACKET RIGHT_BRACKET

    COLON  shift, and go to state 100


State 82

   50 functionDeclarationList: functionDeclaration COMMA . functionDeclarationList

    ID  shift, and go to state 52

    functionDeclarationList  go to state 101
    functionDeclaration      go to state 55


State 83

   22 expression: ID ARRLEFT NR ARRRIGHT .

    $default  reduce using rule 22 (expression)


State 84

   62 interfaceDeclaration: ID LEFT . functionDeclarationList RIGHT COLON functionType SEMICOLON
   63                     | ID LEFT . RIGHT COLON functionType SEMICOLON

    ID     shift, and go to state 52
    RIGHT  shift, and go to state 102

    functionDeclarationList  go to state 103
    functionDeclaration      go to state 55


State 85

   58 interfaceDeclaration: ID COLON . TYPE SEMICOLON
   59                     | ID COLON . ID SEMICOLON
   60                     | ID COLON . TYPE ARRLEFT ARRRIGHT SEMICOLON
   61                     | ID COLON . ID ARRLEFT ARRRIGHT SEMICOLON

    ID    shift, and go to state 104
    TYPE  shift, and go to state 105


State 86

   55 interfaceBlock: INTERFACE ID LEFT_BRACKET interfaceDeclarationList RIGHT_BRACKET .

    $default  reduce using rule 55 (interfaceBlock)


State 87

   57 interfaceDeclarationList: interfaceDeclaration interfaceDeclarationList .

    $default  reduce using rule 57 (interfaceDeclarationList)


State 88

   40 statement: IF LEFT expression RIGHT LEFT_BRACKET . block RIGHT_BRACKET

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    block            go to state 106
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 89

   41 statement: WHILE LEFT expression RIGHT LEFT_BRACKET . block RIGHT_BRACKET

    ID         shift, and go to state 1
    FUNCTION   shift, and go to state 2
    RETURN     shift, and go to state 3
    BREAK      shift, and go to state 4
    INTERFACE  shift, and go to state 5
    IF         shift, and go to state 6
    WHILE      shift, and go to state 7

    block            go to state 107
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 90

   11 declaration: declarationList COLON ID ASSIGN expression .
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    AND      shift, and go to state 39
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    OR       shift, and go to state 45
    NEQ      shift, and go to state 46

    $default  reduce using rule 11 (declaration)


State 91

   13 declaration: declarationList COLON ID ARRLEFT ARRRIGHT .
   15            | declarationList COLON ID ARRLEFT ARRRIGHT . ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN  shift, and go to state 108

    $default  reduce using rule 13 (declaration)


State 92

   10 declaration: declarationList COLON TYPE ASSIGN expression .
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    AND      shift, and go to state 39
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    OR       shift, and go to state 45
    NEQ      shift, and go to state 46

    $default  reduce using rule 10 (declaration)


State 93

   12 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT .
   14            | declarationList COLON TYPE ARRLEFT ARRRIGHT . ASSIGN ARRLEFT arrayValues ARRRIGHT

    ASSIGN  shift, and go to state 109

    $default  reduce using rule 12 (declaration)


State 94

   52 functionDeclaration: ID COLON ID .
   54                    | ID COLON ID . ARRLEFT ARRRIGHT

    ARRLEFT  shift, and go to state 110

    $default  reduce using rule 52 (functionDeclaration)


State 95

   51 functionDeclaration: ID COLON TYPE .
   53                    | ID COLON TYPE . ARRLEFT ARRRIGHT

    ARRLEFT  shift, and go to state 111

    $default  reduce using rule 51 (functionDeclaration)


State 96

   46 functionType: ID .

    $default  reduce using rule 46 (functionType)


State 97

   47 functionType: TYPE .

    $default  reduce using rule 47 (functionType)


State 98

   48 functionType: VOID .

    $default  reduce using rule 48 (functionType)


State 99

   44 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType . LEFT_BRACKET block RIGHT_BRACKET
   45              | FUNCTION ID LEFT RIGHT COLON functionType . LEFT_BRACKET RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 112


State 100

   42 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON . functionType LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON . functionType LEFT_BRACKET RIGHT_BRACKET

    ID    shift, and go to state 96
    TYPE  shift, and go to state 97
    VOID  shift, and go to state 98

    functionType  go to state 113


State 101

   50 functionDeclarationList: functionDeclaration COMMA functionDeclarationList .

    $default  reduce using rule 50 (functionDeclarationList)


State 102

   63 interfaceDeclaration: ID LEFT RIGHT . COLON functionType SEMICOLON

    COLON  shift, and go to state 114


State 103

   62 interfaceDeclaration: ID LEFT functionDeclarationList . RIGHT COLON functionType SEMICOLON

    RIGHT  shift, and go to state 115


State 104

   59 interfaceDeclaration: ID COLON ID . SEMICOLON
   61                     | ID COLON ID . ARRLEFT ARRRIGHT SEMICOLON

    ARRLEFT    shift, and go to state 116
    SEMICOLON  shift, and go to state 117


State 105

   58 interfaceDeclaration: ID COLON TYPE . SEMICOLON
   60                     | ID COLON TYPE . ARRLEFT ARRRIGHT SEMICOLON

    ARRLEFT    shift, and go to state 118
    SEMICOLON  shift, and go to state 119


State 106

    4 block: block . statement
   40 statement: IF LEFT expression RIGHT LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 120
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 27
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 107

    4 block: block . statement
   41 statement: WHILE LEFT expression RIGHT LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 121
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 27
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 108

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN . ARRLEFT arrayValues ARRRIGHT

    ARRLEFT  shift, and go to state 122


State 109

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN . ARRLEFT arrayValues ARRRIGHT

    ARRLEFT  shift, and go to state 123


State 110

   54 functionDeclaration: ID COLON ID ARRLEFT . ARRRIGHT

    ARRRIGHT  shift, and go to state 124


State 111

   53 functionDeclaration: ID COLON TYPE ARRLEFT . ARRRIGHT

    ARRRIGHT  shift, and go to state 125


State 112

   44 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET . block RIGHT_BRACKET
   45              | FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 126
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    block            go to state 127
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 113

   42 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType . LEFT_BRACKET block RIGHT_BRACKET
   43              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType . LEFT_BRACKET RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 128


State 114

   63 interfaceDeclaration: ID LEFT RIGHT COLON . functionType SEMICOLON

    ID    shift, and go to state 96
    TYPE  shift, and go to state 97
    VOID  shift, and go to state 98

    functionType  go to state 129


State 115

   62 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT . COLON functionType SEMICOLON

    COLON  shift, and go to state 130


State 116

   61 interfaceDeclaration: ID COLON ID ARRLEFT . ARRRIGHT SEMICOLON

    ARRRIGHT  shift, and go to state 131


State 117

   59 interfaceDeclaration: ID COLON ID SEMICOLON .

    $default  reduce using rule 59 (interfaceDeclaration)


State 118

   60 interfaceDeclaration: ID COLON TYPE ARRLEFT . ARRRIGHT SEMICOLON

    ARRRIGHT  shift, and go to state 132


State 119

   58 interfaceDeclaration: ID COLON TYPE SEMICOLON .

    $default  reduce using rule 58 (interfaceDeclaration)


State 120

   40 statement: IF LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 40 (statement)


State 121

   41 statement: WHILE LEFT expression RIGHT LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 41 (statement)


State 122

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT . arrayValues ARRRIGHT

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    arrayValues  go to state 133
    expression   go to state 134


State 123

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT . arrayValues ARRRIGHT

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    arrayValues  go to state 135
    expression   go to state 134


State 124

   54 functionDeclaration: ID COLON ID ARRLEFT ARRRIGHT .

    $default  reduce using rule 54 (functionDeclaration)


State 125

   53 functionDeclaration: ID COLON TYPE ARRLEFT ARRRIGHT .

    $default  reduce using rule 53 (functionDeclaration)


State 126

   45 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 45 (functionBlock)


State 127

    4 block: block . statement
   44 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 136
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 27
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 128

   42 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET . block RIGHT_BRACKET
   43              | FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 137
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    block            go to state 138
    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 13
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 129

   63 interfaceDeclaration: ID LEFT RIGHT COLON functionType . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 130

   62 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT COLON . functionType SEMICOLON

    ID    shift, and go to state 96
    TYPE  shift, and go to state 97
    VOID  shift, and go to state 98

    functionType  go to state 140


State 131

   61 interfaceDeclaration: ID COLON ID ARRLEFT ARRRIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 132

   60 interfaceDeclaration: ID COLON TYPE ARRLEFT ARRRIGHT . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 133

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues . ARRRIGHT

    ARRRIGHT  shift, and go to state 143


State 134

   16 arrayValues: expression .
   17            | expression . COMMA arrayValues
   23 expression: expression . MINUS expression
   24           | expression . PLUS expression
   25           | expression . MUL expression
   26           | expression . DIV expression
   28           | expression . GREATER expression
   29           | expression . LESS expression
   30           | expression . EQL expression
   31           | expression . LEQ expression
   32           | expression . GREQ expression
   33           | expression . NEQ expression
   34           | expression . OR expression
   35           | expression . AND expression

    COMMA    shift, and go to state 144
    PLUS     shift, and go to state 35
    MINUS    shift, and go to state 36
    MUL      shift, and go to state 37
    DIV      shift, and go to state 38
    AND      shift, and go to state 39
    LESS     shift, and go to state 40
    LEQ      shift, and go to state 41
    EQL      shift, and go to state 42
    GREATER  shift, and go to state 43
    GREQ     shift, and go to state 44
    OR       shift, and go to state 45
    NEQ      shift, and go to state 46

    $default  reduce using rule 16 (arrayValues)


State 135

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues . ARRRIGHT

    ARRRIGHT  shift, and go to state 145


State 136

   44 functionBlock: FUNCTION ID LEFT RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 44 (functionBlock)


State 137

   43 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 43 (functionBlock)


State 138

    4 block: block . statement
   42 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block . RIGHT_BRACKET

    ID             shift, and go to state 1
    RIGHT_BRACKET  shift, and go to state 146
    FUNCTION       shift, and go to state 2
    RETURN         shift, and go to state 3
    BREAK          shift, and go to state 4
    INTERFACE      shift, and go to state 5
    IF             shift, and go to state 6
    WHILE          shift, and go to state 7

    instructions     go to state 10
    declaration      go to state 11
    declarationList  go to state 12
    statement        go to state 27
    functionBlock    go to state 14
    interfaceBlock   go to state 15


State 139

   63 interfaceDeclaration: ID LEFT RIGHT COLON functionType SEMICOLON .

    $default  reduce using rule 63 (interfaceDeclaration)


State 140

   62 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT COLON functionType . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 141

   61 interfaceDeclaration: ID COLON ID ARRLEFT ARRRIGHT SEMICOLON .

    $default  reduce using rule 61 (interfaceDeclaration)


State 142

   60 interfaceDeclaration: ID COLON TYPE ARRLEFT ARRRIGHT SEMICOLON .

    $default  reduce using rule 60 (interfaceDeclaration)


State 143

   15 declaration: declarationList COLON ID ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT .

    $default  reduce using rule 15 (declaration)


State 144

   17 arrayValues: expression COMMA . arrayValues

    NR    shift, and go to state 18
    ID    shift, and go to state 19
    LEFT  shift, and go to state 20
    NOT   shift, and go to state 21

    arrayValues  go to state 148
    expression   go to state 134


State 145

   14 declaration: declarationList COLON TYPE ARRLEFT ARRRIGHT ASSIGN ARRLEFT arrayValues ARRRIGHT .

    $default  reduce using rule 14 (declaration)


State 146

   42 functionBlock: FUNCTION ID LEFT functionDeclarationList RIGHT COLON functionType LEFT_BRACKET block RIGHT_BRACKET .

    $default  reduce using rule 42 (functionBlock)


State 147

   62 interfaceDeclaration: ID LEFT functionDeclarationList RIGHT COLON functionType SEMICOLON .

    $default  reduce using rule 62 (interfaceDeclaration)


State 148

   17 arrayValues: expression COMMA arrayValues .

    $default  reduce using rule 17 (arrayValues)
